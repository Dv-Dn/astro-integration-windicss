{"version":3,"file":"index.mjs","sources":["../node_modules/windicss/helpers/index.mjs","../src/index.ts"],"sourcesContent":["import require$$0, { createRequire } from 'module';\nimport require$$1 from 'path';\n\nfunction windi(strings) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    // windi template literal\n    return strings.reduce(function (query, queryPart, i) {\n        var valueExists = i < values.length;\n        var text = query + queryPart;\n        return valueExists ? text + values[i] : text;\n    }, '');\n}\n\nvar lib = {exports: {}};\n\n(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addHook = addHook;\n\nvar _module = _interopRequireDefault(require$$0);\n\nvar _path = _interopRequireDefault(require$$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* (c) 2015 Ari Porad (@ariporad) <http://ariporad.com>. License: ariporad.mit-license.org */\nconst nodeModulesRegex = /^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/; // Guard against poorly mocked module constructors.\n\nconst Module = module.constructor.length > 1 ? module.constructor : _module.default;\nconst HOOK_RETURNED_NOTHING_ERROR_MESSAGE = '[Pirates] A hook returned a non-string, or nothing at all! This is a' + ' violation of intergalactic law!\\n' + '--------------------\\n' + 'If you have no idea what this means or what Pirates is, let me explain: ' + 'Pirates is a module that makes is easy to implement require hooks. One of' + \" the require hooks you're using uses it. One of these require hooks\" + \" didn't return anything from it's handler, so we don't know what to\" + ' do. You might want to debug this.';\n/**\n * @param {string} filename The filename to check.\n * @param {string[]} exts The extensions to hook. Should start with '.' (ex. ['.js']).\n * @param {Matcher|null} matcher A matcher function, will be called with path to a file. Should return truthy if the file should be hooked, falsy otherwise.\n * @param {boolean} ignoreNodeModules Auto-ignore node_modules. Independent of any matcher.\n */\n\nfunction shouldCompile(filename, exts, matcher, ignoreNodeModules) {\n  if (typeof filename !== 'string') {\n    return false;\n  }\n\n  if (exts.indexOf(_path.default.extname(filename)) === -1) {\n    return false;\n  }\n\n  const resolvedFilename = _path.default.resolve(filename);\n\n  if (ignoreNodeModules && nodeModulesRegex.test(resolvedFilename)) {\n    return false;\n  }\n\n  if (matcher && typeof matcher === 'function') {\n    return !!matcher(resolvedFilename);\n  }\n\n  return true;\n}\n/**\n * @callback Hook The hook. Accepts the code of the module and the filename.\n * @param {string} code\n * @param {string} filename\n * @returns {string}\n */\n\n/**\n * @callback Matcher A matcher function, will be called with path to a file.\n *\n * Should return truthy if the file should be hooked, falsy otherwise.\n * @param {string} path\n * @returns {boolean}\n */\n\n/**\n * @callback RevertFunction Reverts the hook when called.\n * @returns {void}\n */\n\n/**\n * @typedef {object} Options\n * @property {Matcher|null} [matcher=null] A matcher function, will be called with path to a file.\n *\n * Should return truthy if the file should be hooked, falsy otherwise.\n *\n * @property {string[]} [extensions=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n * @property {string[]} [exts=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n *\n * @property {string[]} [extension=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n * @property {string[]} [ext=['.js']] The extensions to hook. Should start with '.' (ex. ['.js']).\n *\n * @property {boolean} [ignoreNodeModules=true] Auto-ignore node_modules. Independent of any matcher.\n */\n\n/**\n * Add a require hook.\n *\n * @param {Hook} hook The hook. Accepts the code of the module and the filename. Required.\n * @param {Options} [opts] Options\n * @returns {RevertFunction} The `revert` function. Reverts the hook when called.\n */\n\n\nfunction addHook(hook, opts = {}) {\n  let reverted = false;\n  const loaders = [];\n  const oldLoaders = [];\n  let exts; // We need to do this to fix #15. Basically, if you use a non-standard extension (ie. .jsx), then\n  // We modify the .js loader, then use the modified .js loader for as the base for .jsx.\n  // This prevents that.\n\n  const originalJSLoader = Module._extensions['.js'];\n  const matcher = opts.matcher || null;\n  const ignoreNodeModules = opts.ignoreNodeModules !== false;\n  exts = opts.extensions || opts.exts || opts.extension || opts.ext || ['.js'];\n\n  if (!Array.isArray(exts)) {\n    exts = [exts];\n  }\n\n  exts.forEach(ext => {\n    if (typeof ext !== 'string') {\n      throw new TypeError(`Invalid Extension: ${ext}`);\n    }\n\n    const oldLoader = Module._extensions[ext] || originalJSLoader;\n    oldLoaders[ext] = Module._extensions[ext];\n\n    loaders[ext] = Module._extensions[ext] = function newLoader(mod, filename) {\n      let compile;\n\n      if (!reverted) {\n        if (shouldCompile(filename, exts, matcher, ignoreNodeModules)) {\n          compile = mod._compile;\n\n          mod._compile = function _compile(code) {\n            // reset the compile immediately as otherwise we end up having the\n            // compile function being changed even though this loader might be reverted\n            // Not reverting it here leads to long useless compile chains when doing\n            // addHook -> revert -> addHook -> revert -> ...\n            // The compile function is also anyway created new when the loader is called a second time.\n            mod._compile = compile;\n            const newCode = hook(code, filename);\n\n            if (typeof newCode !== 'string') {\n              throw new Error(HOOK_RETURNED_NOTHING_ERROR_MESSAGE);\n            }\n\n            return mod._compile(newCode, filename);\n          };\n        }\n      }\n\n      oldLoader(mod, filename);\n    };\n  });\n  return function revert() {\n    if (reverted) return;\n    reverted = true;\n    exts.forEach(ext => {\n      // if the current loader for the extension is our loader then unregister it and set the oldLoader again\n      // if not we can not do anything as we cannot remove a loader from within the loader-chain\n      if (Module._extensions[ext] === loaders[ext]) {\n        Module._extensions[ext] = oldLoaders[ext];\n      }\n    });\n  };\n}\n}(lib, lib.exports));\n\nfunction convert(code) {\n    var map = {\n        '@tailwindcss\\\\/typography': 'windicss/plugin/typography',\n        '@tailwindcss\\\\/forms': 'windicss/plugin/forms',\n        '@tailwindcss\\\\/aspect-ratio': 'windicss/plugin/aspect-ratio',\n        '@tailwindcss\\\\/line-clamp': 'windicss/plugin/line-clamp',\n        'tailwindcss\\\\/plugin': 'windicss/plugin',\n        'tailwindcss\\\\/colors': 'windicss/colors',\n        'tailwindcss\\\\/resolveConfig': 'windicss/resolveConfig',\n        'tailwindcss\\\\/defaultConfig': 'windicss/defaultConfig',\n        'tailwindcss\\\\/defaultTheme': 'windicss/defaultTheme',\n    };\n    for (var _i = 0, _a = Object.entries(map); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        code = code.replace(new RegExp(key, 'g'), value);\n    }\n    return code;\n}\nfunction transform(path) {\n    var require = createRequire(import.meta.url);\n    var matcher = function (filename) { return !/\\/windicss\\//.test(filename); };\n    var revert = lib.exports.addHook(function (code) { return convert(code); }, { exts: ['.js'], matcher: matcher, ignoreNodeModules: false });\n    var mod = require(path);\n    revert();\n    return mod;\n}\n\nfunction defineConfig(config) {\n    return config;\n}\n\nexport { convert, defineConfig, transform, windi };\n","import type { AstroIntegration } from \"astro\";\r\nimport { defineConfig } from \"windicss/helpers\";\r\nimport { fileURLToPath } from \"url\";\r\nimport path from \"path\";\r\nimport load from \"@proload/core\";\r\n\r\nimport Windicss, {\r\n  type UserOptions,\r\n  type WindiPluginUtilsOptions,\r\n} from \"vite-plugin-windicss\";\r\n\r\nfunction getDefaultConfig(srcUrl: URL | string) {\r\n  return defineConfig({\r\n    extract: {\r\n      include: [\r\n        path.join(\r\n          fileURLToPath(srcUrl),\r\n          `**`,\r\n          `*.{astro,html,js,jsx,svelte,ts,tsx,vue}`\r\n        ),\r\n      ],\r\n      exclude: [\"node_modules\", \".git\"],\r\n    },\r\n    plugins: [],\r\n  });\r\n}\r\nasync function getUserConfig(root: URL) {\r\n  const resolvedRoot = fileURLToPath(root);\r\n\r\n  return await load(\"windi\", {\r\n    mustExist: false,\r\n    cwd: resolvedRoot,\r\n  });\r\n}\r\n\r\nexport default function windicssPlugin(\r\n  userOptions?: UserOptions,\r\n  utilsOptions?: WindiPluginUtilsOptions\r\n): AstroIntegration {\r\n  return {\r\n    name: \"windicss\",\r\n    hooks: {\r\n      \"astro:config:setup\": async ({ config, updateConfig, injectScript }) => {\r\n        const userConfig = await getUserConfig(config.root);\r\n\r\n        updateConfig({\r\n          vite: {\r\n            plugins: [\r\n              Windicss(\r\n                {\r\n                  config: {\r\n                    ...getDefaultConfig(config.srcDir),\r\n                    ...userConfig?.value,\r\n                  },\r\n                  ...userOptions,\r\n                },\r\n                utilsOptions\r\n              ),\r\n            ],\r\n          },\r\n        });\r\n        injectScript(\"page-ssr\", 'import \"virtual:windi.css\";');\r\n      },\r\n    },\r\n  };\r\n}\r\n"],"names":["lib","module","exports","addHook","_module","_interopRequireDefault","require$$0","_path","require$$1","obj","nodeModulesRegex","Module","HOOK_RETURNED_NOTHING_ERROR_MESSAGE","shouldCompile","filename","exts","matcher","ignoreNodeModules","resolvedFilename","hook","opts","reverted","loaders","oldLoaders","originalJSLoader","ext","oldLoader","mod","compile","code","newCode","getDefaultConfig","srcUrl","path","fileURLToPath","getUserConfig","root","resolvedRoot","load","windicssPlugin","userOptions","utilsOptions","config","updateConfig","injectScript","userConfig","Windicss"],"mappings":"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"}